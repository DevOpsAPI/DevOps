name: cicd
on:
  push:
    branches:
      - main

jobs:
  build:
      runs-on: ubuntu-latest
      steps:
        -
          name: Checkout files
          uses: actions/checkout@v2
  
        -
          name: Install doctl
          uses: digitalocean/action-doctl@v2
          with:
            token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        -
          name: Login to DigitalOcean Container Registry
          run: doctl registry login
        - 
          name: Build Docker image 
          run: docker build -t registry.digitalocean.com/devopsapi/api:latest .
        -
          name: Push Docker image to DigitalOcean
          run: docker push registry.digitalocean.com/devopsapi/api:latest
        -
          name: empty garbage
          run: doctl registry garbage-collection start --include-untagged-manifests --force
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      -
        name: Checkout files
        uses: actions/checkout@v2
   
      -
        name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      -
        name: Login to DigitalOcean Container Registry
        run: doctl registry login
      -
        name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 devopsapi
      -
        name: Update deployment file
        run: |
          sed -i 's|placeholder_host|${{ secrets.HOST_DB }}|' $GITHUB_WORKSPACE/.config/deployment.yaml
      -
        name: Update deployment file
        run: |
          sed -i 's|placeholder_passwd|${{ secrets.DB_PASSWORD }}|' $GITHUB_WORKSPACE/.config/deployment.yaml
      -
        name: apply
        run: kubectl apply -f $GITHUB_WORKSPACE/.config/deployment.yaml
 
      -
        name: update deployment file
        run:  kubectl set image deployment/python-deploy api=registry.digitalocean.com/devopsapi/api:latest
      -
        name: Verify deployment
        run: kubectl rollout status deployment/python-deploy
      -
        name: Deploy load balancer
        run: kubectl apply -f ${GITHUB_WORKSPACE}/.config/loadbalanc.yaml
 
    
